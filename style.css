/* 
O css pode estar em uma folha html ou separada como neste caso em um arquivo .css
Para aplicar ele direto no html basta usar as tags <style> </style> 
Vantagem de estar separado é ter a sua reutilização e tbem na sua organização e desempenho, 
pois os arquivos ficam mais limpos e menores
*/
/*
Para usar ele no HTML basta usar dentro do HEAD o comando:
link:css
vai gerar este código: 
<link rel="stylesheet" href="style.css">
*/
/*
Sintaxe de um código CSS
seletor{propriedade que quer modificar: e o valor desta propriedade;}
Seletor pode ser qualquer <tag> ou um #id ou uma classe .Class
Exemplo: 
body{
    background-color: #ff0000;
}
tbém é possível modificar várias propriedades ao mesmo tempo
seletor{
    propriedade1: valor;
    propriedade2: valor;
}
*/

/* IMPORTAÇÃO GOOGLE FONTS 
para fazer a importação, acesse o site: https://fonts.google.com/
selecione uma fonte, escolha os estilos desejados, aqui no exemplo
selecionamos REGULAR 400 e BOLD 700, na aba ao lado selecione @import
e copie o que dentro da tag STYLE e cole ele após o CSS RESET
OBSERVAÇÃO: toda importação deve ser a primeira coisa a fazer dento da folha
de estio CSS
*/
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');
/*também é necessário pegar a regra em CSS RULES copiar e colar dentro do elemento body*/
body{/*Tudo que tiver dentro de BODY vai seguir esta regra*/
    font-family: 'Open Sans', sans-serif; /*regra copiada*/
    font-size: 1em; /*agora definimos o tamanho da fonte, equivale a 16pixel*/    
}

/* CSS RESET 
isso é feito para  padronizar o layout em todo navegador, no contrário,
cada navegador exibe de um jeito.*/
*{
    margin: 0;
    border: 0;   
    padding: 0;
   }

/* CSS FLEXBOX 
para um layout responsivo e flexivel. A Flexbox, organiza os elemtos, ou seja, as tag html 
dentro de container (tipo uma caixa de texto) permitindo que eles se reorganizem 
de forma autómatica e flexivel 
<div> ... </div> -> criar um container sem semântica
para o CSS vamos criar uma classe, desta forma podemos reutilizar
<div class= "Container"> ... </div>
faremos isso em todas as seções do site
ATALHO: div.Container ENTER
desta forma ele cria a classe automáticamente.
*/
/*LAYOUT*/
.Container {
    margin:0 auto; /*Centralizar conteúdo na tela*/
    background-color: #dcdcdc; /*Definimos uma cor de fundo para ficar mais fácil visualizar este estilo de layout*/
}
#topo { /* Desta forma vamos ficar uma posição única para o ícone TOPO */
    position: fixed;
    right: 10px;
    bottom: 10px;
}

/* Agora vamos criar breakpoints para cada tipo de tela */
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
/* Smartphone Portrait >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* Smartphone Landscape >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
@media (min-width: 576px){ /*Se for maior que 576pixel fazer isso*/
    body{
        background-color: #0ff;
    }
    /*LAYOUT */
    .Container{ /* Define a largura máxima conforme pontos de quebras 'BREAKPOINTS' */
        max-width: 540px;
    }
}
/* Tablet Portrait >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
@media (min-width: 768px){ /*Se for maior que 576pixel fazer isso*/
    body{
        background-color: #ff0;
    }
    /*LAYOUT */
    .Container{ /* Define a largura máxima conforme pontos de quebras 'BREAKPOINTS' */
        max-width: 720px;
    }
}
/* Tablet Landscape e monitores mais antigos>>>>>>>>>>> */
@media (min-width: 992px){ /*Se for maior que 992pixel fazer isso*/
    body{
        background-color: #ff6600;
    }
    /*LAYOUT */
    .Container{ /* Define a largura máxima conforme pontos de quebras 'BREAKPOINTS' */
        max-width: 960px;
    }
}
/* PC >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
@media (min-width: 1200px){ /*Se for maior que 1200pixel fazer isso*/
    body{
        background-color: #ff0000;
    }
    /*LAYOUT */
    .Container{ /* Define a largura máxima conforme pontos de quebras 'BREAKPOINTS' */
        max-width: 1140px;
    }
}